
build: false

clone_depth: 10

#Will only run build/test on tag push
skip_non_tags: true

environment:
  pypipw:
    secure: Ay2WxyHxlSOaJBtn05cPBg==
  matrix:
    - PYTHON_VERSION: 3.6
      MINICONDA: C:\Miniconda3
    - PYTHON_VERSION: 3.6
      MINICONDA: C:\Miniconda3-x64
    - PYTHON_VERSION: 3.7
      MINICONDA: C:\Miniconda3
    - PYTHON_VERSION: 3.7
      MINICONDA: C:\Miniconda3-x64

init:
  - "ECHO %PYTHON_VERSION% %MINICONDA%"

install:
  - cmd: echo "Filesystem:"
  - dir
  # Get needed submodules
  - git submodule update --init
  - "set PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%"
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - "conda create -q -n test-environment python=%PYTHON_VERSION% numpy scipy"
  - activate test-environment
  # Upgrade to the latest pip, setuptools, and wheel.
  - python -m pip install -U pip setuptools wheel
  - conda install twine

build_script:
  - python setup.py install

#Looks like graphical testing is out...
#https://help.appveyor.com/discussions/problems/6946-opengl
test_script:
  #Just run the doctests
  - python lavavu/lavavu.py
#  - git clone --depth 1 https://github.com/mivp/LavaVuTesting
#  - cd LavaVuTesting
#  - python runall.py

after_test:
  # This step builds your wheels.
  - python setup.py bdist_wheel

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

after_test:
  - cmd: "echo [pypi] > %USERPROFILE%\\.pypirc"
  - cmd: "echo username: OwKal >> %USERPROFILE%\\.pypirc"
  - cmd: "echo password: %pypipw% >> %USERPROFILE%\\.pypirc"
- python setup.py bdist_wheel

on_success:
  #Upload tagged version with twine
  - cmd: "if [%APPVEYOR_REPO_TAG%]==[true] twine upload dist\\*.whl"

