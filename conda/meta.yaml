{% set name = "lavavu" %}
{% set version = load_setup_py_data().version %}

package:
  name: "{{ name|lower }}"
  version: "{{ version }}"

source:
  git_url: https://github.com/lavavu/LavaVu.git
  git_depth: 1 # (Defaults to -1/not shallow)
  git_rev: "{{ version }}"

build:
  number: 1
  entry_points:
    - LV = lavavu.__main__:main
    - LavaVu = lavavu.__main__:main
  script_env:
   - LV_OSMESA
   - LV_GLFW
   - MESA_DIR

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    # https://conda-forge.org/docs/maintainer/knowledge_base.html#libgl
    - {{ cdt('mesa-libgl') }}  # [linux]
    - {{ cdt('mesa-libgl-devel') }}  # [linux]
    - {{ cdt('mesa-dri-drivers') }}  # [linux]
    - {{ cdt('xorg-x11-proto-devel') }}  # [linux]
    - {{ cdt('libx11-devel') }}  # [linux]
    - {{ cdt('libxfixes') }}  # [linux]
    - {{ cdt('libxfixes-devel') }}  # [linux]
    - pip
  host:
    - python
    - glfw
    - mesalib  # [linux]
    - ffmpeg
    - sqlite
    - libtiff
    - numpy >=1.18
    - jupyter-server-proxy
    - aiohttp
  run:
    - glfw
    - numpy >=1.18
    - jupyter-server-proxy
    - aiohttp

test:
  # Tests require visual context not present on CIs
  test:
    requires:
    - numpy >=1.11
    - jupyter-server-proxy
    - aiohttp
    - glfw
    - {{ cdt('mesa-libgl-devel') }}  # [linux]
    - {{ cdt('mesa-dri-drivers') }}  # [linux]
  #imports:
  #  - lavavu #Implicit
  commands:
    #This will not work on CI without opengl context / osmesa
    #- printf "test\nimage\nquit\n" | LavaVu
    - printf "quit\n" | LavaVu # [linux]
    #- printf "dummy tests"
    #- {{ PYTHON }} -c "import lavavu; print(lavavu.__version__);"

about:
  home: "https://github.com/lavavu/LavaVu"
  license: "GNU Lesser General Public v3 (LGPLv3)"
  license_family: LGPL
  summary: "Python interface to LavaVu OpenGL 3D scientific visualisation utilities"
  doc_url: https://lavavu.github.io/Documentation/ 

extra:
  recipe-maintainers:
    - rbeucher
    - okaluza
