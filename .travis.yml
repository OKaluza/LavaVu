# In this configuration, the package is tested against multiple versions of python
# on Linux and on one version of Python on Windows. If and only if all tests pass
# will the wheels be built and deployed. Further, deployment is only initiated if
# the current branch is "master", the current commit is tagged, and the current
# repo is yours (e.g. it won't run on a Pull Request). For convenience, a source
# distribution is also created.

# Based on : https://github.com/joerick/cibuildwheel/blob/master/examples/travis-ci-test-and-deploy.yml
# and : https://github.com/moderngl/glcontext/blob/master/.travis.yml

language: python
dist: bionic
python:
#  - 3.6
  - 3.7
#  - 3.8
services:
  - xvfb

before_install:
  - |
    if [[ "$TRAVIS_OS_NAME" = windows ]]; then
        choco install python --version 3.8.0
        export PATH="/c/Python38:/c/Python38/Scripts:$PATH"
        # make sure it's on PATH as 'python3'
        ln -s /c/Python38/python.exe /c/Python38/python3.exe
        python3 -m pip install pypiwin32 #fixes jupyter install dep error
    fi

addons:
  apt:
    packages:
    - libgl1-mesa-dev
    - libx11-dev
    - zlib1g-dev
    - libavcodec-dev
    - libavformat-dev
    - libavutil-dev
    - libswscale-dev
  homebrew:
    packages:
    - ffmpeg

install:
  - python3 -m pip install numpy

script:
  - python3 setup.py install
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      git clone --depth 1 https://github.com/lavavu/Testing
      cd Testing
      export GALLIUM_DRIVER="llvmpipe"
      export LV_ECHO_FAIL=1
      export LV_ARGS="-v"
      python3 runall.py || travis_terminate 1
      cd ..
    fi

after_script:
  - pwd
  - ls -la ./build
  - ls -la ./wheelhouse

stages:
  - test
  # Only execute deployment stage on tagged commits, and from your repository
  # (e.g. not PRs).
  - name: deploy
    if: repo = lavavu/LavaVu #FOR TESTING: always deploy
    #if: tag IS PRESENT AND repo = lavavu/LavaVu
    # To only build tags that look like X.Y.Z:
    #   if: tag =~ ^\d+\.\d+\.\d+$ AND repo = lavavu/lavavu

jobs:
  include:
    # Optional: run a test on Windows
    #- os: windows
    #  language: shell
    #  name: Test on Windows
    #- os: osx
    #  language: shell
    #  name: Test on MacOS

    # Deploy source distribution
    - stage: deploy
      name: Deploy source distribution
      install: skip
      script: python3 setup.py sdist --formats=gztar
      after_success: |
        python3 -m pip install twine
        python3 -m twine upload --skip-existing dist/*.tar.gz
    # Deploy on linux
    - stage: deploy
      name: Build and deploy Linux wheels
      services: docker
      install: python3 -m pip install cibuildwheel==1.3.0
      script: python3 -m cibuildwheel --output-dir wheelhouse
      after_success: |
        python3 -m pip install twine
        python3 -m twine upload --skip-existing wheelhouse/*.whl
    # Deploy on mac
    - stage: deploy
      name: Build and deploy macOS wheels
      os: osx
      language: shell
      env: MACOSX_DEPLOYMENT_TARGET=10.13
      install: python3 -m pip install cibuildwheel==1.3.0
      script: python3 -m cibuildwheel --output-dir wheelhouse
      after_success: |
        python3 -m pip install twine
        python3 -m twine upload --skip-existing wheelhouse/*.whl
    # Deploy on windows
    - stage: deploy
      name: Build and deploy Windows wheels
      os: windows
      language: shell
      install: python3 -m pip install cibuildwheel==1.3.0
      script: python3 -m cibuildwheel --output-dir wheelhouse
      after_success: |
        python3 -m pip install twine
        python3 -m twine upload --skip-existing wheelhouse/*.whl

env:
  global:
    - CIBW_SKIP=cp27-*
    - CIBW_SKIP=cp34-*
    - CIBW_SKIP=cp35-*
    - CIBW_BUILD=cp3?-*
    #- CIBW_MANYLINUX_X86_64_IMAGE=manylinux1
    #- CIBW_MANYLINUX_I686_IMAGE=manylinux1
    - CIBW_TEST_COMMAND: 'cd lavavu; python3 -m doctest -v lavavu.py'
    # Note: TWINE_PASSWORD encrypted as secret
    - TWINE_USERNAME: OwKal
    - secure: "pNa4arGN+GjtdLLBYdgoJmbOPyoLWB1E24V+UZ7pQJ8ZZir6b6vIoLWBD8i9SoywipbIYDhQk+do5wu97hGwn/b8/kVU4ftHgYTUrdb2lvuwTlmuIxMRL+FRuw0p6HQ5i+GvxRatx71Sbb8mB/7FJ5MnEqYdY9IOqs/9BrrwkqO4fElDmpFsB0kHSNu1aP3owOCzdQFByiXWv50CE6U4S7Tn1vtBGuygFx85QQSpl9NRPGmgLrOR21Hat31HaBjaGk9SS2LT4mDjZt9kxyHkmMYoXjmakUgItw4cf5y6SUtGEeJwt+viGeKgK6fYr9lwJal3ZZ750BN1KC0YIm8hcdglHfcQ/Slik8jkLjkzdeHSODxb3ucUY3DIizk2TXQoY2rdby/cGpcq+VLl1aSNPjLCQIM0gnvdIfHBynDNyiulH9175O8o7pm7IoGvkonjukAFFFyYzvXe22pU7CslaopvnC2auSVJa3jhBmPvQtofi2W2jy5tpBN3GrsZv4AWMqbXBo0T8YSbrvconOjK3SzuLYSzC9kajJShKwi7S4FzyWSlhx6ua9xpv15DWt8dd1ePZ+Sz7dKhlNkKwNsvzGtI6AlCNmgkqIqBszMf/UzyGfOeFXsKTxo6SIWAJKyV3a7aCcMv8vjo7Gz8HuT4Sz7YdmHqtTVP2lMlIk/stw0="

