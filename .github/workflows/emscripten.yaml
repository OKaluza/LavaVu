# - Creates a release on matching tag push (disabled for now)
# - builds new emscripten wasm
# - uploads as release assets
#
# https://github.com/lavavu/LavaVu/releases/latest/download/LavaVu.wasm
# https://github.com/lavavu/LavaVu/releases/latest/download/LavaVu-amalgamated.js
# https://github.com/lavavu/LavaVu/releases/latest/download/LavaVu.data
# https://github.com/lavavu/LavaVu/releases/latest/download/LavaVu-amalgamated.css

name: Release-Emscripten-Build

# Build on every branch push, tag push, and pull request change where tag matches a version release
on: [push]
#    tags:
#     - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: mymindstorm/setup-emsdk@v7

      - name: Verify
        run: emcc -v

      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install prereqs
        run: python -m pip install -r requirements.txt
      - name: Build/install
        run: make emscripten

      #This gets specific release instead of creating, for testing
      - name: Get Release
        id: get_release
        uses: pdamianik/release-tag-to-upload-url-action@v1.0.1
        with:
          tag: 1.6.7
          token: ${{ github.token }}

      #- name: Create Release
      #  id: create_release
      #  uses: actions/create-release@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    tag_name: ${{ github.ref }}
      #    release_name: Release ${{ github.ref }}
      #    draft: false
      #    prerelease: false

      - name: Upload WASM
        id: upload-release-asset-1
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.uploadUrl }} # This pulls from the GET RELEASE step above, referencing it's ID to get its outputs object 
          #upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./lavavu/html/LavaVu.wasm
          asset_name: LavaVu.wasm
          asset_content_type: application/wasm

      - name: Upload Javascript
        id: upload-release-asset-2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.uploadUrl }} # This pulls from the GET RELEASE step above, referencing it's ID to get its outputs object 
          #upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./lavavu/html/LavaVu-amalgamated.js
          asset_name: LavaVu-amalgamated.js
          asset_content_type: application/javascript

      - name: Upload Data
        id: upload-release-asset-3
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.uploadUrl }} # This pulls from the GET RELEASE step above, referencing it's ID to get its outputs object 
          #upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./lavavu/html/LavaVu.data
          asset_name: LavaVu.data
          asset_content_type: application/octet-stream

      - name: Upload CSS
        id: upload-release-asset-4
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.uploadUrl }} # This pulls from the GET RELEASE step above, referencing it's ID to get its outputs object 
          #upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./lavavu/html/LavaVu-amalgamated.css
          asset_name: LavaVu-amalgamated.css
          asset_content_type: text/css

      - name: Push files to lavavu.github.io
        uses: dmnemec/copy_file_to_another_repo_action@v1.0.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          API_TOKEN_GITHUB: ${{ secrets.LAVAVU }}
        with:
          source_file: 'lavavu/html/LavaVu*'
          destination_repo: 'lavavu/lavavu.github.io'
          destination_branch: 'main'
          user_name: ${{ github.event.pusher.name }}
          user_email: ${{ github.event.pusher.email }}

