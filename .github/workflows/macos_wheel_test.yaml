name: WheelDeployTest

on:
  push

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_BUILD_VERBOSITY: 3
      CIBW_BUILD: cp312-* cp313-*
      #CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-* cp313-*
      #CIBW_REPAIR_WHEEL_COMMAND_MACOS: delocate-listdeps {wheel} && delocate-wheel -v -w {dest_dir} {wheel}
      CIBW_ENVIRONMENT: LV_LIB_DIRS=${HOME}/lib LV_INC_DIRS=${HOME}/include
      CIBW_BEFORE_ALL_LINUX: >
        cd ~ &&
        curl -O -L https://github.com/lavavu/LavaVu/releases/latest/download/ffmpeg-mini.zip &&
        unzip -o ffmpeg-mini.zip &&
        dnf install -y --nogpgcheck libtiff-devel
      CIBW_BEFORE_ALL_MACOS: >
        sudo port install ffmpeg
      #CIBW_BEFORE_ALL_MACOS: >
      #  brew install ffmpeg &&
      #  sudo ln -s /opt/homebrew/lib /usr/local/lib &&
      #  sudo ln -s /opt/homebrew/include /usr/local/include
      CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
      CIBW_TEST_COMMAND_LINUX: >
        git clone --depth 1 https://github.com/lavavu/Testing &&
        cd Testing &&
        export LV_ECHO_FAIL=1 &&
        export LV_ARGS="-v" &&
        python runall.py
      CIBW_TEST_COMMAND_MACOS: >
        pip install moderngl &&
        git clone --depth 1 https://github.com/lavavu/Testing &&
        cd Testing &&
        export LV_CONTEXT=moderngl &&
        export LV_ECHO_FAIL=1 &&
        export LV_ARGS="-v" &&
        python runall.py

    strategy:
      matrix:
        # MacOS 13 runner is x86_64, 14 is arm64
        # (https://cibuildwheel.pypa.io/en/stable/faq/#how)
        os: [macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.22.0

      # https://github.com/pypa/cibuildwheel/issues/563
      #- name: Set macOS deployment target
      #  if: runner.os == 'macOS'
      #  run: echo "MACOSX_DEPLOYMENT_TARGET=$(sw_vers -productVersion | cut -d '.' -f 1-2)" >> $GITHUB_ENV

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl


